cmake_minimum_required(VERSION 3.10)
project(nodebro-c VERSION 1.0.0 LANGUAGES C)

set(CMAKE_C_STANDARD 11)
set(CMAKE_C_STANDARD_REQUIRED ON)

# Set output directories
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)

# Find packages
find_package(CURL REQUIRED)
find_package(Threads REQUIRED)

# Add subdirectories for external libraries
add_subdirectory(lib/PDCurses)
add_subdirectory(lib/cJSON)
add_subdirectory(lib/tomlc99)

# Include directories
include_directories(
    ${CMAKE_SOURCE_DIR}/src
    ${CMAKE_SOURCE_DIR}/include
    ${CURL_INCLUDE_DIRS}
    ${CMAKE_SOURCE_DIR}/lib/PDCurses
    ${CMAKE_SOURCE_DIR}/lib/cJSON
    ${CMAKE_SOURCE_DIR}/lib/tomlc99
)

# Source files
set(SOURCES
    src/main.c
    src/config.c
    src/requests.c
    src/ui.c
    src/release_page.c
    src/utils.c
)

# Header files
set(HEADERS
    src/config.h
    src/requests.h
    src/ui.h
    src/release_page.h
    src/utils.h
)

# Create executable
add_executable(nodebro ${SOURCES} ${HEADERS})

# Link libraries
target_link_libraries(nodebro
    ${CURL_LIBRARIES}
    ${CMAKE_THREAD_LIBS_INIT}
    pdcurses
    cjson
    tomlc99
    ws2_32      # Windows sockets
    winmm       # Windows multimedia (for timeBeginPeriod)
    advapi32    # Advanced Windows API
)

# Windows specific settings
if(MSVC)
    # Set Windows subsystem
    set_target_properties(nodebro PROPERTIES
        LINK_FLAGS "/SUBSYSTEM:CONSOLE"
    )
    
    # Disable security warnings
    target_compile_definitions(nodebro PRIVATE
        _CRT_SECURE_NO_WARNINGS
        _CRT_NONSTDC_NO_WARNINGS
    )
    
    # Enable multi-processor compilation
    target_compile_options(nodebro